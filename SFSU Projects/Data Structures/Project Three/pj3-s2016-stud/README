CSc 220                     Assignment 3.               Instructor: James Wong
==============================================================================

1. Introduction 

We want to write a program to simulate the checkout area of a SuperMart store.
The goal of this simulation is to collect statistical information of the store’s
customers and cashiers. A checkout area consists of several cashiers and a 
customer waiting line (or queue). In each time unit, at most one new customer 
arrives at the waiting line. If the customer waiting line is too long, the 
customer leaves without checking out; otherwise, the customer gets into the 
waiting line. If all cashiers are busy, customers in the waiting lines must 
wait to checkout. If a cashier is free and customers are waiting, the first 
customer in the waiting line advances to the cashier’s counter and begins to 
checkout. When a customer is done, the customer departs and the cashier becomes 
free. We will run the simulation through many units of time. At the end of each 
time unit, your program should print out a "snap-shot" of queues, customers and 
cashiers. At the end of the program, your program should print out statistics 
and conclude simulation.


2. Assumptions and Requirements

2.1. Assumptions

- At most one customer arrives per time unit
- All numbers are positive integer numbers (>=0), except average values 
  should be displayed to two decimal places
- No time lost in between events:
  a customer arriving and entering waiting line
  a customer arriving and leaving without checking out
  a customer completing checkout and departing
  a customer leaving the waiting line, advancing to a cashier and 
    	beginning to checkout

2.2. The limits of simulations parameters

- Maximum number of cashiers    10
- Maximum simulation length     10000
- Maximum checkout time         500
- Maximum customer queue limit  50
- Probability of a new customer 1% - 100%


2.3. Input parameters and customer (random/file) data 

- The following data are read at the beginning of the simulation:

  int numCashiers;        // number of Cashiers.
  int simulationTime;     // time to run simulation
  int customerQLimit;     // customer queue limit
  int chancesOfArrival;   // probability of a new Customer ( 1 - 100)
  int maxServiceTime;     // maximum service time per customer
  int dataSource;         // data source: from file or random


- Sample input layout :

        ***  Get Simulation Parameters  ***

  Enter simulation time (positive integer)       : 10
  Enter the number of cashiers                   : 3
  Enter chances (0% < & <= 100%) of new customer : 75
  Enter maximum service time of customers        : 5
  Enter customer queue limit                     : 2
  Enter 0/1 to get data from random/file         : 1        <- see details below
  Enter filename                                 : DataFile <- for input 1 above


- In each time unit of simulation, your program will need two positive integer 
  numbers to compute boolean anyNewArrival & int checkoutTime. A user should 
  have two options to specify the source of those numbers (input 1 or 0):

  For user input 1, numbers are read from a file. A filename should be provided 
  at the beginning of simulation. Each line in a datafile should contain two 
  positive numbers (> 0). A datafile should contain sufficient data for
  simulationTime upto 500 units, i.e. at least 500 lines. In each time unit, 
  anyNewArrival & checkoutTime are computed as follows :

         read data1 and data2 from the file;
         anyNewArrival = (((data1%100)+1)<= chancesOfArrival);
         checkoutTime = (data2%maxCheckoutTime)+1;
 

  For user input 0, numbers are generated by method nextInt() in a Random 
  object, dataRandom, which should be constructed at the beginning of 
  simulation. In each time unit, anyNewArrival & checkoutTime are computed as
  follows :

        anyNewArrival = ((dataRandom.nextInt(100)+1) <= chancesOfArrival);
        checkoutTime = dataRandom.nextInt(maxCheckoutTime)+1;


2.4. INput/Output information

- At the end of each time unit, you program should print out "snap-shot" of 
  simulation. At the end of simulation, you program need to print out end 
  of simulation report 

- Sample run is provided at the end of Readme file.


2.5 Data structures and simulation algorithm

- I have defined package PJ3 with the Customer, Cashier and CheckoutArea classes. 
  You need to implement their methods. I also provide an outline of a 
  simulation program SuperMart.java. 


3. Compile and run program

- You need to download PJ3 zip file (with sample datafie) from ilearn.

- Compile programs (you are in directory containing Readme file):

  javac PJ3/*.java

- Run programs (you are in directory containing Readme file):

  // Run simulation
  java PJ3.SuperMart


4. Due date and project submission 

- 11:55pm Sunday, May 1, 2016
- To submit your project, you need to zip (or tar) all source files and
  upload it to ilearn.


=====================================================================================
SAMPLE RUN
=====================================================================================

$ java PJ3.Customer
Customer Info --> customerID=1:serviceTime=35:arrivalTime=5

$ java PJ3.Cashier
CashierID=5:startClockTime=12:endClockTime=27>>serveCustomer:customerID=1:serviceTime=15:arrivalTime=5

$ java PJ3.CheckoutArea
customerQ:[customerID=1:serviceTime=18:arrivalTime=10, customerID=2:serviceTime=33:arrivalTime=11, customerID=3:serviceTime=21:arrivalTime=12, customerID=4:serviceTime=37:arrivalTime=13]
===============================================
Remove customer:customerID=1:serviceTime=18:arrivalTime=10
Remove customer:customerID=2:serviceTime=33:arrivalTime=11
Remove customer:customerID=3:serviceTime=21:arrivalTime=12
Remove customer:customerID=4:serviceTime=37:arrivalTime=13
===============================================
freeCashierQ:[CashierID=1:startClockTime=0:endClockTime=0>>serveCustomer:null, CashierID=2:startClockTime=0:endClockTime=0>>serveCustomer:null, CashierID=3:startClockTime=0:endClockTime=0>>serveCustomer:null, CashierID=4:startClockTime=0:endClockTime=0>>serveCustomer:null]
===============================================
Remove free cashier:CashierID=1:startClockTime=0:endClockTime=0>>serveCustomer:null
Remove free cashier:CashierID=2:startClockTime=0:endClockTime=0>>serveCustomer:null
Remove free cashier:CashierID=3:startClockTime=0:endClockTime=0>>serveCustomer:null
Remove free cashier:CashierID=4:startClockTime=0:endClockTime=0>>serveCustomer:null
===============================================
freeCashierQ:[]
===============================================
busyCashierQ:[]
===============================================
busyCashierQ:[CashierID=1:startClockTime=13:endClockTime=31>>serveCustomer:customerID=1:serviceTime=18:arrivalTime=10, CashierID=3:startClockTime=13:endClockTime=34>>serveCustomer:customerID=3:serviceTime=21:arrivalTime=12, CashierID=2:startClockTime=13:endClockTime=46>>serveCustomer:customerID=2:serviceTime=33:arrivalTime=11, CashierID=4:startClockTime=13:endClockTime=50>>serveCustomer:customerID=4:serviceTime=37:arrivalTime=13]
===============================================
Remove busy cashier:CashierID=1:startClockTime=13:endClockTime=31>>serveCustomer:customerID=1:serviceTime=18:arrivalTime=10
Remove busy cashier:CashierID=3:startClockTime=13:endClockTime=34>>serveCustomer:customerID=3:serviceTime=21:arrivalTime=12
Remove busy cashier:CashierID=2:startClockTime=13:endClockTime=46>>serveCustomer:customerID=2:serviceTime=33:arrivalTime=11
Remove busy cashier:CashierID=4:startClockTime=13:endClockTime=50>>serveCustomer:customerID=4:serviceTime=37:arrivalTime=13


$ java PJ3.SuperMart

        ***  Get Simulation Parameters  ***


Enter simulation time (positive integer)       : 10
Enter the number of cashiers                   : 3
Enter chances (0% < & <= 100%) of new customer : 75
Enter maximum service time of customers        : 5
Enter customer queue limit                     : 2
Enter 0/1 to get data from random/file         : 1
Enter filename                                 : DataFile


        ***  Start Simulation  ***


Customer #1 to #3 are ready...


---------------------------------------------
Time : 0
        customer #1 arrives with checkout time 5 units
        customer #1 wait in the customer queue
        customer #1 gets a cashier
        cashier  #1 starts serving customer #1 for 5 units
---------------------------------------------
Time : 1
        customer #2 arrives with checkout time 2 units
        customer #2 wait in the customer queue
        customer #2 gets a cashier
        cashier  #2 starts serving customer #2 for 2 units
---------------------------------------------
Time : 2
        customer #3 arrives with checkout time 5 units
        customer #3 wait in the customer queue
        customer #3 gets a cashier
        cashier  #3 starts serving customer #3 for 5 units
---------------------------------------------
Time : 3
        No new customer!
        customer #2 is done
        cashier  #2 is free
---------------------------------------------
Time : 4
        customer #4 arrives with checkout time 3 units
        customer #4 wait in the customer queue
        customer #4 gets a cashier
        cashier  #2 starts serving customer #4 for 3 units
---------------------------------------------
Time : 5
        No new customer!
        customer #1 is done
        cashier  #1 is free
---------------------------------------------
Time : 6
        customer #5 arrives with checkout time 3 units
        customer #5 wait in the customer queue
        customer #5 gets a cashier
        cashier  #1 starts serving customer #5 for 3 units
---------------------------------------------
Time : 7
        customer #6 arrives with checkout time 5 units
        customer #6 wait in the customer queue
        customer #4 is done
        cashier  #2 is free
        customer #3 is done
        cashier  #3 is free
        customer #6 gets a cashier
        cashier  #2 starts serving customer #6 for 5 units
---------------------------------------------
Time : 8
        No new customer!
---------------------------------------------
Time : 9
        No new customer!
        customer #5 is done
        cashier  #1 is free


============================================


End of simulation report

        # total arrival customers  : 6
        # customers gone-away      : 0
        # customers served         : 6

        *** Current Cashiers Info. ***


        # waiting customers  : 0
        # busy cashiers      : 1
        # free cashiers      : 2

        Total waiting time         : 0
        Average waiting time       : 0.00


        Busy Cashiers Info. :


                Cashier ID             : 2
                Total free time        : 2
                Total busy time        : 8
                Total # of customers   : 3
                Average checkout time  : 2.67



        Free Cashiers Info. :


                Cashier ID             : 3
                Total free time        : 5
                Total busy time        : 5
                Total # of customers   : 1
                Average checkout time  : 5.00


                Cashier ID             : 1
                Total free time        : 2
                Total busy time        : 8
                Total # of customers   : 2
                Average checkout time  : 4.00



